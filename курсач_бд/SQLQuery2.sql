use courseDataBase;
create database courseDataBase;
DELETE DOCTOR;
DELETE SPECIALTY;
DELETE PASSWORD_TABLE;
DELETE DEPARTMENT;
DELETE HOSPITAL;
select HOSPITAL.ID_HOSPITAL from HOSPITAL inner join DEPARTMENT on DEPARTMENT.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL where NAME_DEPARTMENT='11me11nt1';
SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL='101-ˇ ÒÚÛ‰Â1Ì˜ÂÒÍ‡ˇ';
--ÔÓˆÂ‰Û˚ ‰Îˇ ‰Ó·‡‚ÎÂÌËÂ ‰‡ÌÌ˚ı ‚ Ú‡·ÎËˆÛ
CREATE PROCEDURE ADD_DEPARTMENT
@NAME_DEPARTMENT NVARCHAR(30),
@NAME_HOSPITAL NVARCHAR(60)
AS 
BEGIN
DECLARE @ID_HOSPITAL INT
BEGIN TRY
IF NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL)
		BEGIN
			PRINT '“¿ Œ… œŒÀ» À»Õ» Õ≈“”';
		END;
ELSE
BEGIN
	SET @ID_HOSPITAL=(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL);
	IF NOT EXISTS(SELECT ID_DEPARTMENT FROM DEPARTMENT WHERE NAME_DEPARTMENT=@NAME_DEPARTMENT AND ID_HOSPITAL=@ID_HOSPITAL)
	BEGIN
			INSERT INTO DEPARTMENT(NAME_DEPARTMENT,ID_HOSPITAL)
		VALUES(@NAME_DEPARTMENT,@ID_HOSPITAL);
		PRINT 'Œ“ƒ≈À≈Õ»≈ ƒŒ¡¿¬À≈ÕŒ'
	END;


	ELSE
	BEGIN
	PRINT '“¿ Œ≈ Œ“ƒ≈À≈Õ»≈ ”∆≈ ≈—“‹'
	END;
END;
		END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END
DROP PROCEDURE ADD_DEPARTMENT
EXEC ADD_DEPARTMENT '11me11nt1','101-ˇ ÒÚÛ‰Â1Ì˜ÂÒÍ‡ˇ'
------------------------------------------------------------------
DROP PROCEDURE ADD_DOCTOR;
CREATE PROCEDURE ADD_DOCTOR
@NAME_DEPARTMENT NVARCHAR(30)=NULL,
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20),
@PATRONY NVARCHAR(20),
@OFFICE NVARCHAR(10),
@QUALIFICATION NVARCHAR(30),
@BDAY DATE,
@DATE_STARTED DATE,
@POSITION NVARCHAR(20),
@PHONE_NUMBER NVARCHAR(20)=NULL,
@NAME_HOSPITAL NVARCHAR(60),
@PASSWORD_USER NVARCHAR(60)='123',
@SPECIALTY_NAME NVARCHAR(50)
AS 
DECLARE @ID_HOSPITAL INT
DECLARE @ID_DEPARTMENT1 INT
DECLARE @ID_DOCTOR INT
DECLARE @FLAG INT=0
BEGIN
	BEGIN TRY
	IF NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL)
		BEGIN
			SET @FLAG=1;
			PRINT '“¿ Œ… œŒÀ» À»Õ» Õ≈“”';
		END;
	ELSE
		BEGIN
		SET @ID_HOSPITAL=(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL);
		END;
	
	IF NOT EXISTS(SELECT ID_DEPARTMENT FROM DEPARTMENT WHERE NAME_DEPARTMENT=@NAME_DEPARTMENT and ID_HOSPITAL=@ID_HOSPITAL) AND @FLAG=0
		BEGIN
			IF  @POSITION='„Î. ‚‡˜'
				BEGIN
					SET @FLAG=0;
				END;
			ELSE
				BEGIN
					SET @FLAG=1;
					PRINT '“¿ Œ√Œ Œ“ƒ≈À≈Õ»ﬂ Õ≈“”';
				END;
		END;
	print @flag
	IF @FLAG=0
	BEGIN
		SET @ID_DEPARTMENT1=(SELECT ID_DEPARTMENT FROM DEPARTMENT WHERE NAME_DEPARTMENT=@NAME_DEPARTMENT AND ID_HOSPITAL=@ID_HOSPITAL)
		IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE  
							FIRST_NAME=@FIRST_NAME AND LAST_NAME=@LAST_NAME AND PATRONY=@PATRONY AND OFFICE=@OFFICE AND QUALIFICATION=@QUALIFICATION AND
							BDAY=@BDAY AND DATE_STARTED=@DATE_STARTED    )					
			BEGIN
			IF @POSITION='„Î. ‚‡˜'
				BEGIN
					IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE ID_HOSPITAL=@ID_HOSPITAL AND POSITION='„Î. ‚‡˜')
					BEGIN
						INSERT INTO DOCTOR(ID_DEPARTMENT,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,BDAY,DATE_STARTED,POSITION,PHONE_NUMBER,ID_HOSPITAL)
						VALUES(NULL,@FIRST_NAME,@LAST_NAME,@PATRONY,@OFFICE,@QUALIFICATION,@BDAY,@DATE_STARTED,@POSITION,@PHONE_NUMBER,@ID_HOSPITAL);
						SET @ID_DOCTOR=(SELECT MAX(ID_DOCTOR) FROM DOCTOR);
						INSERT INTO PASSWORD_TABLE(ID_DOCTOR,ID_PATIENT,USER_PASSWORD)VALUES(@ID_DOCTOR,NULL,NULL);
						OPEN SYMMETRIC KEY SSN_Key_1  
						DECRYPTION BY CERTIFICATE HumanResources;  
						UPDATE PASSWORD_TABLE 
						SET USER_PASSWORD = EncryptByKey(Key_GUID('SSN_Key_1'), @PASSWORD_USER) where ID_DOCTOR=@ID_DOCTOR ; 
						INSERT INTO SPECIALTY(ID_DOCTOR,SPECIALTY_NAME)VALUES(@ID_DOCTOR,@SPECIALTY_NAME);
						PRINT '√À ¬–¿◊ ƒŒ¡¿¬À≈Õ';
						SET @FLAG=2;
					END;
					ELSE
					BEGIN
						PRINT '“¿ Œ… √À¿¬ ¬–¿◊ ”∆≈ ≈—“‹'
						SET @FLAG=2;
					END;
				END;	
		IF @POSITION='Á‡Ï. ÓÚ‰ÂÎÂÌËˇ'
		BEGIN
			IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE ID_HOSPITAL=@ID_HOSPITAL AND ID_DEPARTMENT=@ID_DEPARTMENT1 AND POSITION=@POSITION) AND @FLAG!=2
				BEGIN
					INSERT INTO DOCTOR(ID_DEPARTMENT,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,BDAY,DATE_STARTED,POSITION,PHONE_NUMBER,ID_HOSPITAL)
					VALUES(@ID_DEPARTMENT1,@FIRST_NAME,@LAST_NAME,@PATRONY,@OFFICE,@QUALIFICATION,@BDAY,@DATE_STARTED,@POSITION,@PHONE_NUMBER,@ID_HOSPITAL);
					SET @ID_DOCTOR=(SELECT MAX(ID_DOCTOR) FROM DOCTOR);
					INSERT INTO PASSWORD_TABLE(ID_DOCTOR,ID_PATIENT,USER_PASSWORD)VALUES(@ID_DOCTOR,NULL,NULL);
					OPEN SYMMETRIC KEY SSN_Key_1  
					DECRYPTION BY CERTIFICATE HumanResources;  
					UPDATE PASSWORD_TABLE 
					SET USER_PASSWORD = EncryptByKey(Key_GUID('SSN_Key_1'), @PASSWORD_USER) where ID_DOCTOR=@ID_DOCTOR ; 
					INSERT INTO SPECIALTY(ID_DOCTOR,SPECIALTY_NAME)VALUES(@ID_DOCTOR,@SPECIALTY_NAME);
					PRINT '«¿Ã. Œ“≈ƒ≈À≈Õ»ﬂ ƒŒ¡¿¬À≈Õ'
					SET @FLAG=2;
				END
			ELSE
				BEGIN
					PRINT '“¿ Œ… «¿Ã. Œ“≈ƒ≈À≈Õ»ﬂ ”∆≈ ≈—“‹'
					SET @FLAG=2;
				END;
		END;
		IF @FLAG=0
		BEGIN
			INSERT INTO DOCTOR(ID_DEPARTMENT,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,BDAY,DATE_STARTED,POSITION,PHONE_NUMBER,ID_HOSPITAL)
			VALUES(@ID_DEPARTMENT1,@FIRST_NAME,@LAST_NAME,@PATRONY,@OFFICE,@QUALIFICATION,@BDAY,@DATE_STARTED,@POSITION,@PHONE_NUMBER,@ID_HOSPITAL);
			SET @ID_DOCTOR=(SELECT MAX(ID_DOCTOR) FROM DOCTOR);
			INSERT INTO PASSWORD_TABLE(ID_DOCTOR,ID_PATIENT,USER_PASSWORD)VALUES(@ID_DOCTOR,NULL,NULL);
			OPEN SYMMETRIC KEY SSN_Key_1  
			DECRYPTION BY CERTIFICATE HumanResources;  
			UPDATE PASSWORD_TABLE 
			SET USER_PASSWORD = EncryptByKey(Key_GUID('SSN_Key_1'), @PASSWORD_USER) where ID_DOCTOR=@ID_DOCTOR ; 
			INSERT INTO SPECIALTY(ID_DOCTOR,SPECIALTY_NAME)VALUES(@ID_DOCTOR,@SPECIALTY_NAME);
			PRINT '¬–¿◊ ƒŒ¡¿¬À≈Õ'
		END;
	END
	ELSE
		BEGIN
			PRINT '“¿ Œ… ¬–¿◊ ”∆≈ ≈—“‹'
		END;
	END;
	
	END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH 
END;
SELECT * FROM HOSPITAL WHERE NAME_HOSPITAL='3M'
DECLARE @ID_HOSPITAL INT
SET @ID_HOSPITAL=(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL='3M');
SELECT * FROM DOCTOR WHERE ID_HOSPITAL=@ID_HOSPITAL
PRINT @ID_HOSPITAL
IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE ID_HOSPITAL=@ID_HOSPITAL)
BEGIN
PRINT '-'
END
EXEC ADD_DOCTOR NULL,'KF3VF41ti44r1','14B1t13445k33o','Ser1‡v4ich','1-11','3 1year1s','04-07-2001','11-10-2001','„Î. ‚‡˜','+319769106','3GM','dem1is','F1'
EXEC ADD_HOSPITAL @NAME_HOSPITAL='3GM';
EXEC ADD_DEPARTMENT '3GGM','3GM'
SELECT ID_DOCTOR FROM DOCTOR WHERE ID_HOSPITAL=2051 AND ID_DEPARTMENT=1047
EXEC DEL_DATA_ALL_TABLE;
------------------------------------------------------------------
CREATE PROCEDURE ADD_HOSPITAL
@COUNTRY NVARCHAR(40)='NO NAME',
@CITY NVARCHAR(40)='NO NAME',
@AREA NVARCHAR(40)='NO NAME',
@NAME_HOSPITAL NVARCHAR(60),
@REGISTRATION_PHONE NVARCHAR(10)='NO NAME'
AS 
BEGIN
BEGIN TRY
IF NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL)
	BEGIN
	INSERT INTO HOSPITAL(COUNTRY,CITY,AREA,NAME_HOSPITAL,REGISTRATION_PHONE)
	VALUES(@COUNTRY,@CITY,@AREA,@NAME_HOSPITAL,@REGISTRATION_PHONE);
	PRINT 'œŒÀ» À»Õ» ¿ ƒŒ¡¿¬À≈Õ¿'
	END
	ELSE
	BEGIN
	PRINT 'Œÿ»¡ ¿ ¬ œ¿–¿Ã≈“–¿’'
	END;

		END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;

drop PROCEDURE ADD_HOSPITAL
EXEC ADD_HOSPITAL @COUNTRY='1',@CITY='2G',@AREA='G',@NAME_HOSPITAL='3GC',@REGISTRATION_PHONE='G'
EXEC ADD_HOSPITAL @NAME_HOSPITAL='1011-ˇ ÒÚÛ‰Â1Ì˜ÂÒÍ‡ˇ';
------------------------------------------------------------------
DROP PROCEDURE ADD_PATIENT;
CREATE PROCEDURE ADD_PATIENT
@GENDER CHAR(1),
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20),
@PATRONY NVARCHAR(20),
@BDAY DATE,
@HOME_ADRESS NVARCHAR(40),
@PASSPORT_ID NVARCHAR(30)=NULL,
@NAME_HOSPITAL NVARCHAR(60),
@PLACE_OF_WORK_OR_STUDY NVARCHAR(40)=NULL,
@DISABILITY NVARCHAR(40)=NULL,
@CHRONIC_DISEASES NVARCHAR(40)=NULL,
@PASSWORD_USER NVARCHAR(60)='123'
AS 
DECLARE @ID_HOSPITAL INT
DECLARE @ID_PATIENT INT
BEGIN
	BEGIN TRY
	IF NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL) OR (@GENDER!='M' AND @GENDER!='W')
			BEGIN
				PRINT '“¿ Œ… œŒÀ» À»Õ» » Õ≈“ »À» Õ≈¬≈–ÕŒ ” ¿«¿Õ œŒÀ'
			END;
	ELSE
		BEGIN
		IF  NOT EXISTS(SELECT ID_PATIENT FROM PATIENT WHERE GENDER=@GENDER AND FIRST_NAME=@FIRST_NAME AND LAST_NAME=@LAST_NAME AND PATRONY=@PATRONY AND BDAY=@BDAY AND HOME_ADRESS=@HOME_ADRESS
		AND PASSPORT_ID=@PASSPORT_ID  )
		BEGIN
			SET @ID_HOSPITAL=(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL);
			INSERT INTO PATIENT(GENDER,FIRST_NAME,LAST_NAME,PATRONY,BDAY,HOME_ADRESS,PASSPORT_ID,ID_HOSPITAL,PLACE_OF_WORK_OR_STUDY,DISABILITY,CHRONIC_DISEASES)
			VALUES(@GENDER,@FIRST_NAME,@LAST_NAME,@PATRONY,@BDAY,@HOME_ADRESS,@PASSPORT_ID,@ID_HOSPITAL,@PLACE_OF_WORK_OR_STUDY,@DISABILITY,@CHRONIC_DISEASES);
			SET @ID_PATIENT=(SELECT MAX(ID_PATIENT) FROM PATIENT);
						INSERT INTO PASSWORD_TABLE(ID_DOCTOR,ID_PATIENT,USER_PASSWORD)VALUES(NULL,@ID_PATIENT,NULL);
						OPEN SYMMETRIC KEY SSN_Key_1  
						DECRYPTION BY CERTIFICATE HumanResources;  
						UPDATE PASSWORD_TABLE 
						SET USER_PASSWORD = EncryptByKey(Key_GUID('SSN_Key_1'), @PASSWORD_USER) where ID_PATIENT=@ID_PATIENT ;
			PRINT 'ƒ¿ÕÕ€≈ ƒŒ¡¿¬À≈Õ€'
		END;
		ELSE
		BEGIN
			PRINT '◊≈ÀŒ¬≈  “¿ Œ… ”∆≈ ≈—“‹' 
		END;

		END
		END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
EXEC ADD_PATIENT 'M','A5n1Rt4onR','fed5oznik','antonovich','01-01-1200','street lox home 23 flat 1','AB21345224','3GM','stroitel','first degree',NULL,'234ff'
select * from PATIENT;
------------------------------------------------------------------
drop PROCEDURE ADD_RECEPTION
CREATE PROCEDURE ADD_RECEPTION
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20),
@SPECIALTY_NAME NVARCHAR(50),
@FIRST_NAME_PATIENT NVARCHAR(20),
@LAST_NAME__PATIENT NVARCHAR(20),
@NAME_HOSPITAL NVARCHAR(60),
@TIME NVARCHAR(20),
@DATE DATE,
@SYMPTOMS NVARCHAR(100)=NULL,
@DIAGNOSIS NVARCHAR(100),
@MEDICINES NVARCHAR(100),
@COMMENTS NVARCHAR(200)=NULL
AS 
DECLARE @ID_HOSPITAL INT
DECLARE @ID_PATIENT INT
DECLARE @ID_DOCTOR INT
DECLARE @FLAG  INT
DECLARE @ID_TIME INT
BEGIN	
BEGIN TRY
SET @FLAG=0
	IF NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL) 
			BEGIN
				SET @FLAG=1
				PRINT '“¿ Œ… œŒÀ» À»Õ» » Õ≈“ '
			END;
	ELSE
		BEGIN
			SET @ID_HOSPITAL=(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL);
		END
	IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE ID_HOSPITAL=@ID_HOSPITAL AND FIRST_NAME=@FIRST_NAME AND LAST_NAME=@LAST_NAME) AND @FLAG!=0
		BEGIN
				SET @FLAG=1
				PRINT '“¿ Œ√Œ ¬–¿◊¿ Õ≈“'
		END;
	ELSE
		BEGIN
			SET @ID_DOCTOR=(SELECT TOP(1) ID_DOCTOR FROM DOCTOR WHERE ID_HOSPITAL=@ID_HOSPITAL AND FIRST_NAME=@FIRST_NAME AND LAST_NAME=@LAST_NAME)
			IF NOT EXISTS(SELECT ID_SPECIALTY FROM SPECIALTY WHERE ID_DOCTOR=@ID_DOCTOR AND SPECIALTY_NAME=@SPECIALTY_NAME)
			BEGIN
				PRINT '¬–¿◊ Õ≈ À≈◊»“ “¿ »’ ƒ”–¿ Œ¬ »À» ¬€¡–¿Õ¿ Õ≈ “¿ ƒ”– ¿ »À» Õ≈ ¬€¡–¿Õ¿ œ–¿¬»À‹ÕŒ —œ≈÷»¿À‹ÕŒ—“‹ ¬–¿◊¿'
				SET @FLAG=1
			END;
		END;
	IF NOT EXISTS(SELECT ID_PATIENT FROM PATIENT WHERE ID_HOSPITAL=@ID_HOSPITAL AND FIRST_NAME=@FIRST_NAME_PATIENT AND LAST_NAME=@LAST_NAME__PATIENT) AND @FLAG!=1
		BEGIN
				SET @FLAG=1
				PRINT '“¿ Œ√Œ ¡ŒÀ‹ÕŒ√Œ Õ≈ —”Ÿ≈—“¬”≈“ »À» Õ≈ “Œ… œŒÀ» À»Õ» » ŒÕ œ–»Õ¿ƒÀ≈∆»“'
		END;
	ELSE
		BEGIN
			SET @ID_PATIENT=(SELECT TOP(1) ID_PATIENT FROM PATIENT WHERE ID_HOSPITAL=@ID_HOSPITAL AND FIRST_NAME=@FIRST_NAME_PATIENT AND LAST_NAME=@LAST_NAME__PATIENT)
		END;

	IF(GETDATE()>@DATE) OR DATENAME(weekday, @DATE)='‚ÓÒÍÂÒÂÌ¸Â' OR DATENAME(weekday, @DATE)='ÒÛ··ÓÚ‡' OR
	(DATENAME(hour, @TIME)=13 OR DATENAME(hour, @TIME)=14  OR (DATENAME(hour, @TIME)<10  OR DATENAME(hour, @TIME)>17))
		BEGIN
			SET @FLAG=1
			PRINT 'Õ≈¬≈–Õ¿ﬂ ƒ¿“¿ »À» ¬–≈Ãﬂ'
		END
	IF @FLAG!=1
		BEGIN
			PRINT '¬—® √”ƒ'
			INSERT INTO TIME_TIMETABLE(ID_DOCTOR,DAY_OF_THE_WEEK,STARTING_A_PATIENT_RECEPTION)values
			(@ID_DOCTOR,@DATE,@TIME);
			SET @ID_TIME=(SELECT MAX(ID_TIME) FROM TIME_TIMETABLE);
			INSERT INTO RECEPTION(ID_DOCTOR,ID_PATIENT,ID_HOSPITAL,ID_TIME,SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS)
			VALUES(@ID_DOCTOR,@ID_PATIENT,@ID_HOSPITAL,@ID_TIME,@SYMPTOMS,@DIAGNOSIS,@MEDICINES,@COMMENTS)
		END;
		END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
END CATCH
END;
EXEC ADD_RECEPTION 'KF3VF41ti44r1','14B1t13445k33o','F1','A5n1Rt4onR','fed5oznik','3GM','16:9','07-12-2020','ssss','wwwww','eeeeee','rrrrr'
SELECT TOP(1) ID_DOCTOR FROM DOCTOR WHERE ID_HOSPITAL=2047 AND FIRST_NAME= 'Kir1' AND LAST_NAME='1B5k33o'
SELECT ID_SPECIALTY FROM SPECIALTY WHERE ID_DOCTOR=2075 AND SPECIALTY_NAME='F'
EXEC EXPORT_TO_JSON_RECEPTION
------------------------------------------------------------------
------------------------------------------------------------------
CREATE PROCEDURE ADD_TIME_TIMETABLE
@ID_DOCTOR INT,
@DAY_OF_THE_WEEK NVARCHAR(20),
@STARTING_A_PATIENT_RECEPTION NVARCHAR(20)
AS 
INSERT INTO TIME_TIMETABLE(ID_DOCTOR,DAY_OF_THE_WEEK,STARTING_A_PATIENT_RECEPTION)
VALUES(@ID_DOCTOR,@DAY_OF_THE_WEEK,@STARTING_A_PATIENT_RECEPTION);
------------------------------------------------------------------
CREATE PROCEDURE DEL_DATA_ALL_TABLE
AS
BEGIN
DELETE PASSWORD_TABLE;
DELETE RECEPTION;
DELETE TIME_TIMETABLE;
DELETE SPECIALTY;
DELETE PATIENT;
DELETE DOCTOR;
DELETE DEPARTMENT;
DELETE HOSPITAL;
END;
CREATE PROCEDURE DROP_ALL_TABLE
AS
BEGIN
DROP TABLE PASSWORD_TABLE;
DROP TABLE RECEPTION;
DROP TABLE TIME_TIMETABLE;
DROP TABLE SPECIALTY;
DROP TABLE PATIENT;
DROP TABLE DOCTOR;
DROP TABLE DEPARTMENT;
DROP TABLE HOSPITAL;
END;
EXEC DROP_ALL_TABLE
EXEC DEL_DATA_ALL_TABLE;
------------------------------------------------------------------œ–Œ÷≈ƒ”–€ ¬€¬Œƒ¿ ƒ¿ÕÕ€’
CREATE PROCEDURE SELECT_ALL_DEPARTMENT
AS
BEGIN
SELECT * FROM DEPARTMENT;
END;
CREATE PROCEDURE SELECT__DEPARTMENT_ON_HOSPITAL_NAME
@NAME_HOSPITAL NVARCHAR(60)
AS
BEGIN
SELECT NAME_DEPARTMENT,COUNTRY,REGISTRATION_PHONE,NAME_HOSPITAL FROM DEPARTMENT INNER JOIN HOSPITAL ON DEPARTMENT.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	WHERE HOSPITAL.NAME_HOSPITAL=@NAME_HOSPITAL
END;
CREATE PROCEDURE SELECT__DEPARTMENT_ON_HOSPITAL_ID
@ID_HOSPITAL INT
AS
BEGIN
SELECT NAME_DEPARTMENT,COUNTRY,REGISTRATION_PHONE,NAME_HOSPITAL FROM DEPARTMENT INNER JOIN HOSPITAL ON DEPARTMENT.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	WHERE HOSPITAL.ID_HOSPITAL=@ID_HOSPITAL;
END;
EXEC SELECT_HOSPITAL_NAME_ON_DEPARTMENT '1011-ˇ ÒÚÛ‰Â1Ì˜ÂÒÍ‡ˇ';
------------------------------------------------------------------
CREATE PROCEDURE SELECT_ALL_DOCTOR_INCLUDE_IN_DEPARTMENT
AS
BEGIN
	SELECT ID_DOCTOR,DEPARTMENT.NAME_DEPARTMENT,HOSPITAL.NAME_HOSPITAL,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,
	BDAY,DATE_STARTED,POSITION,PHONE_NUMBER FROM DOCTOR INNER JOIN DEPARTMENT ON DOCTOR.ID_DEPARTMENT=DEPARTMENT.ID_DEPARTMENT
	INNER JOIN HOSPITAL ON DOCTOR.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
END;
CREATE PROCEDURE SELECT_ALL_HEAD_PLHYSICIAN
AS
BEGIN
	SELECT ID_DOCTOR,HOSPITAL.NAME_HOSPITAL,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,
	BDAY,DATE_STARTED,POSITION,PHONE_NUMBER FROM DOCTOR 
	INNER JOIN HOSPITAL ON DOCTOR.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL WHERE DOCTOR.POSITION='„Î. ‚‡˜'
END;
CREATE PROCEDURE SELECT_ALL_DOCTOR
AS
BEGIN
	SELECT * FROM DOCTOR;
END;
CREATE PROCEDURE SELECT_DOCTOR_SPECIALTY
AS
BEGIN
	SELECT DOCTOR.ID_DOCTOR,SPECIALTY_NAME,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,
	BDAY,DATE_STARTED,POSITION,PHONE_NUMBER FROM DOCTOR INNER JOIN SPECIALTY
	ON DOCTOR.ID_DOCTOR=SPECIALTY.ID_DOCTOR
END;

CREATE PROCEDURE SELECT_PASSWORD_DOCTOR_ENCRYPTED
AS
BEGIN
	SELECT  DOCTOR.ID_DOCTOR,PASSWORD_TABLE.USER_PASSWORD,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,
	BDAY,DATE_STARTED,POSITION,PHONE_NUMBER FROM DOCTOR INNER JOIN PASSWORD_TABLE
	ON DOCTOR.ID_DOCTOR= PASSWORD_TABLE.ID_DOCTOR
END;
CREATE PROCEDURE SELECT_PASSWORD_DOCTOR_DECRYPTED
AS
BEGIN
	OPEN SYMMETRIC KEY SSN_Key_1  
   DECRYPTION BY CERTIFICATE HumanResources;  
	SELECT  DOCTOR.ID_DOCTOR,CONVERT(nvarchar, DecryptByKey(USER_PASSWORD)) AS 'Decrypted USER PASSWORD',FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,
	BDAY,DATE_STARTED,POSITION,PHONE_NUMBER FROM DOCTOR INNER JOIN PASSWORD_TABLE
	ON DOCTOR.ID_DOCTOR= PASSWORD_TABLE.ID_DOCTOR
END;
EXEC SELECT_PASSWORD_DOCTOR_DECRYPTED
EXEC SELECT_PASSWORD_DOCTOR_ENCRYPTED
CREATE PROCEDURE SELECT_DOCTOR_FIRST_AND_LAST_NAME
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20)
AS
BEGIN
		SELECT ID_DOCTOR,HOSPITAL.NAME_HOSPITAL,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,
	BDAY,DATE_STARTED,POSITION,PHONE_NUMBER FROM DOCTOR 
	INNER JOIN HOSPITAL ON DOCTOR.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL WHERE FIRST_NAME=@FIRST_NAME AND LAST_NAME=@LAST_NAME
END;
CREATE PROCEDURE SELECT_DOCTOR_ID
@ID_DOCTOR INT
AS
BEGIN
	SELECT ID_DOCTOR,HOSPITAL.NAME_HOSPITAL,FIRST_NAME,LAST_NAME,PATRONY,OFFICE,QUALIFICATION,
	BDAY,DATE_STARTED,POSITION,PHONE_NUMBER FROM DOCTOR 
	INNER JOIN HOSPITAL ON DOCTOR.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL WHERE ID_DOCTOR=@ID_DOCTOR
END;
------------------------------------------------------------------
CREATE PROCEDURE SELECT_ALL_PATIENT_UNMASK
AS
BEGIN
	SELECT GENDER,FIRST_NAME,LAST_NAME,PATRONY,BDAY,HOME_ADRESS,PASSPORT_ID,HOSPITAL.NAME_HOSPITAL
	,PLACE_OF_WORK_OR_STUDY,DISABILITY,CHRONIC_DISEASES FROM PATIENT INNER JOIN HOSPITAL ON PATIENT.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
END;
CREATE PROCEDURE SELECT_ALL_PATIENT_MASK
AS
BEGIN
	EXECUTE AS USER = 'TestUser'; 
	SELECT GENDER,FIRST_NAME,LAST_NAME,PATRONY,BDAY,HOME_ADRESS,PASSPORT_ID
	,PLACE_OF_WORK_OR_STUDY,DISABILITY,CHRONIC_DISEASES FROM PATIENT
	REVERT;
END;
EXEC SELECT_ALL_PATIENT_MASK
EXEC SELECT_ALL_PATIENT_UNMASK
CREATE PROCEDURE SELECT_PATIENT_AND_PASSWORD
AS
BEGIN
	OPEN SYMMETRIC KEY SSN_Key_1  
    DECRYPTION BY CERTIFICATE HumanResources;  
	SELECT GENDER,FIRST_NAME,LAST_NAME,PATRONY,BDAY,HOME_ADRESS,PASSPORT_ID,CONVERT(nvarchar, DecryptByKey(USER_PASSWORD)) AS 'Decrypted USER PASSWORD'
	,PLACE_OF_WORK_OR_STUDY,DISABILITY,CHRONIC_DISEASES FROM PATIENT INNER JOIN PASSWORD_TABLE ON PATIENT.ID_PATIENT=PASSWORD_TABLE.ID_PATIENT
END;
CREATE PROCEDURE SELECT_PATIENT_FOR_FIRST_AND_LAST_NAME
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20)
AS
BEGIN
	SELECT GENDER,FIRST_NAME,LAST_NAME,PATRONY,BDAY,HOME_ADRESS,PASSPORT_ID,HOSPITAL.NAME_HOSPITAL
	,PLACE_OF_WORK_OR_STUDY,DISABILITY,CHRONIC_DISEASES FROM PATIENT INNER JOIN HOSPITAL ON PATIENT.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	WHERE PATIENT.FIRST_NAME=@FIRST_NAME AND PATIENT.LAST_NAME=@LAST_NAME
END;
------------------------------------------------------------------
CREATE PROCEDURE SELECT_ALL_HOSPITAL
AS
BEGIN
	SELECT ID_HOSPITAL,COUNTRY,CITY,AREA,REGISTRATION_PHONE,NAME_HOSPITAL FROM HOSPITAL
END;
EXEC SELECT_ALL_HOSPITAL
CREATE PROCEDURE SELECT_HOSPITAL_FOR_NAME
@NAME_HOSPITAL NVARCHAR(60)
AS
BEGIN
	SELECT ID_HOSPITAL,COUNTRY,CITY,AREA,REGISTRATION_PHONE,NAME_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL
END;
exec SELECT_HOSPITAL_FOR_NAME 'XFQWSNUOBI'
SELECT NAME_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL='XFQWSNUOBI'
CREATE PROCEDURE SELECT_HOSPITAL_FOR_ID
@ID_HOSPITAL INT
AS
BEGIN
	SELECT ID_HOSPITAL,COUNTRY,CITY,AREA,REGISTRATION_PHONE,NAME_HOSPITAL FROM HOSPITAL WHERE ID_HOSPITAL=@ID_HOSPITAL
END;
exec SELECT_HOSPITAL_FOR_ID 400033
CREATE PROCEDURE SELECT_HOSPITAL_FOR_COUNTRY
@COUNTRY NVARCHAR(40)
AS
BEGIN
	SELECT ID_HOSPITAL,COUNTRY,CITY,AREA,REGISTRATION_PHONE,NAME_HOSPITAL FROM HOSPITAL WHERE COUNTRY=@COUNTRY
END;
------------------------------------------------------------------
CREATE PROCEDURE SELECT_ALL_RECEPTION

AS
BEGIN
	SELECT SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS,DOCTOR.FIRST_NAME AS 'DOCTOR FIRST NAME',DOCTOR.LAST_NAME AS 'DOCTOR LAST NAME',DOCTOR.POSITION
	,PATIENT.FIRST_NAME AS' PATIENT FIRST NAME',PATIENT.LAST_NAME AS 'PATIENT LAST NAME',HOSPITAL.NAME_HOSPITAL,
	TIME_TIMETABLE.DAY_OF_THE_WEEK AS 'VISIT DAY',TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION AS 'TIME VISIT' FROM RECEPTION INNER JOIN DOCTOR ON RECEPTION.ID_DOCTOR=DOCTOR.ID_DOCTOR
	INNER JOIN PATIENT ON RECEPTION.ID_PATIENT=PATIENT.ID_PATIENT INNER JOIN HOSPITAL ON RECEPTION.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	INNER JOIN TIME_TIMETABLE ON RECEPTION.ID_TIME=TIME_TIMETABLE.ID_TIME
END;
EXEC SELECT_ALL_RECEPTION
CREATE PROCEDURE SELECT_RECEPTION_FOR_PATIENT_FIRST_AND_LAST_NAME
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20)
AS
BEGIN
	SELECT SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS,DOCTOR.FIRST_NAME AS 'DOCTOR FIRST NAME',DOCTOR.LAST_NAME AS 'DOCTOR LAST NAME',DOCTOR.POSITION
	,PATIENT.FIRST_NAME AS' PATIENT FIRST NAME',PATIENT.LAST_NAME AS 'PATIENT LAST NAME',HOSPITAL.NAME_HOSPITAL,
	TIME_TIMETABLE.DAY_OF_THE_WEEK AS 'VISIT DAY',TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION AS 'TIME VISIT' FROM RECEPTION INNER JOIN DOCTOR ON RECEPTION.ID_DOCTOR=DOCTOR.ID_DOCTOR
	INNER JOIN PATIENT ON RECEPTION.ID_PATIENT=PATIENT.ID_PATIENT INNER JOIN HOSPITAL ON RECEPTION.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	INNER JOIN TIME_TIMETABLE ON RECEPTION.ID_TIME=TIME_TIMETABLE.ID_TIME WHERE PATIENT.FIRST_NAME=@FIRST_NAME AND PATIENT.LAST_NAME=@LAST_NAME
END;
EXEC SELECT_RECEPTION_FOR_PATIENT_FIRST_AND_LAST_NAME 'An1ton','fedoznik'
CREATE PROCEDURE SELECT_RECEPTION_FOR_DOCTOR_FIRST_AND_LAST_NAME
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20)
AS
BEGIN
	SELECT SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS,DOCTOR.FIRST_NAME AS 'DOCTOR FIRST NAME',DOCTOR.LAST_NAME AS 'DOCTOR LAST NAME',DOCTOR.POSITION
	,PATIENT.FIRST_NAME AS' PATIENT FIRST NAME',PATIENT.LAST_NAME AS 'PATIENT LAST NAME',HOSPITAL.NAME_HOSPITAL,
	TIME_TIMETABLE.DAY_OF_THE_WEEK AS 'VISIT DAY',TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION AS 'TIME VISIT' FROM RECEPTION INNER JOIN DOCTOR ON RECEPTION.ID_DOCTOR=DOCTOR.ID_DOCTOR
	INNER JOIN PATIENT ON RECEPTION.ID_PATIENT=PATIENT.ID_PATIENT INNER JOIN HOSPITAL ON RECEPTION.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	INNER JOIN TIME_TIMETABLE ON RECEPTION.ID_TIME=TIME_TIMETABLE.ID_TIME WHERE DOCTOR.FIRST_NAME=@FIRST_NAME AND DOCTOR.LAST_NAME=@LAST_NAME
END;

CREATE PROCEDURE SELECT_RECEPTION_FOR_TIME
@TIME NVARCHAR(20)
AS
BEGIN
	SELECT SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS,DOCTOR.FIRST_NAME AS 'DOCTOR FIRST NAME',DOCTOR.LAST_NAME AS 'DOCTOR LAST NAME',DOCTOR.POSITION
	,PATIENT.FIRST_NAME AS' PATIENT FIRST NAME',PATIENT.LAST_NAME AS 'PATIENT LAST NAME',HOSPITAL.NAME_HOSPITAL,
	TIME_TIMETABLE.DAY_OF_THE_WEEK AS 'VISIT DAY',TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION AS 'TIME VISIT' FROM RECEPTION INNER JOIN DOCTOR ON RECEPTION.ID_DOCTOR=DOCTOR.ID_DOCTOR
	INNER JOIN PATIENT ON RECEPTION.ID_PATIENT=PATIENT.ID_PATIENT INNER JOIN HOSPITAL ON RECEPTION.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	INNER JOIN TIME_TIMETABLE ON RECEPTION.ID_TIME=TIME_TIMETABLE.ID_TIME WHERE TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION=@TIME
END;
EXEC SELECT_RECEPTION_FOR_TIME '14:00'

CREATE PROCEDURE SELECT_RECEPTION_FOR_DATE
@TIME DATE
AS
BEGIN
	SELECT SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS,DOCTOR.FIRST_NAME AS 'DOCTOR FIRST NAME',DOCTOR.LAST_NAME AS 'DOCTOR LAST NAME',DOCTOR.POSITION
	,PATIENT.FIRST_NAME AS' PATIENT FIRST NAME',PATIENT.LAST_NAME AS 'PATIENT LAST NAME',HOSPITAL.NAME_HOSPITAL,
	TIME_TIMETABLE.DAY_OF_THE_WEEK AS 'VISIT DAY',TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION AS 'TIME VISIT' FROM RECEPTION INNER JOIN DOCTOR ON RECEPTION.ID_DOCTOR=DOCTOR.ID_DOCTOR
	INNER JOIN PATIENT ON RECEPTION.ID_PATIENT=PATIENT.ID_PATIENT INNER JOIN HOSPITAL ON RECEPTION.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	INNER JOIN TIME_TIMETABLE ON RECEPTION.ID_TIME=TIME_TIMETABLE.ID_TIME WHERE TIME_TIMETABLE.DAY_OF_THE_WEEK=@TIME
END;
CREATE PROCEDURE SELECT_RECEPTION_FOR_DATE_AND_TIME
@TIME DATE,
@TIME1 NVARCHAR(20)
AS
BEGIN
	SELECT SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS,DOCTOR.FIRST_NAME AS 'DOCTOR FIRST NAME',DOCTOR.LAST_NAME AS 'DOCTOR LAST NAME',DOCTOR.POSITION
	,PATIENT.FIRST_NAME AS' PATIENT FIRST NAME',PATIENT.LAST_NAME AS 'PATIENT LAST NAME',HOSPITAL.NAME_HOSPITAL,
	TIME_TIMETABLE.DAY_OF_THE_WEEK AS 'VISIT DAY',TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION AS 'TIME VISIT' FROM RECEPTION INNER JOIN DOCTOR ON RECEPTION.ID_DOCTOR=DOCTOR.ID_DOCTOR
	INNER JOIN PATIENT ON RECEPTION.ID_PATIENT=PATIENT.ID_PATIENT INNER JOIN HOSPITAL ON RECEPTION.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	INNER JOIN TIME_TIMETABLE ON RECEPTION.ID_TIME=TIME_TIMETABLE.ID_TIME WHERE TIME_TIMETABLE.DAY_OF_THE_WEEK=@TIME AND
	TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION=@TIME1
END;
CREATE PROCEDURE SELECT_RECEPTION_FOR_DATE_AND_FIRST_AND_LAST_NAME_DOCTOR
@TIME DATE,
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20)
AS
BEGIN
	SELECT SYMPTOMS,DIAGNOSIS,MEDICINES,COMMENTS,DOCTOR.FIRST_NAME AS 'DOCTOR FIRST NAME',DOCTOR.LAST_NAME AS 'DOCTOR LAST NAME',DOCTOR.POSITION
	,PATIENT.FIRST_NAME AS' PATIENT FIRST NAME',PATIENT.LAST_NAME AS 'PATIENT LAST NAME',HOSPITAL.NAME_HOSPITAL,
	TIME_TIMETABLE.DAY_OF_THE_WEEK AS 'VISIT DAY',TIME_TIMETABLE.STARTING_A_PATIENT_RECEPTION AS 'TIME VISIT' FROM RECEPTION INNER JOIN DOCTOR ON RECEPTION.ID_DOCTOR=DOCTOR.ID_DOCTOR
	INNER JOIN PATIENT ON RECEPTION.ID_PATIENT=PATIENT.ID_PATIENT INNER JOIN HOSPITAL ON RECEPTION.ID_HOSPITAL=HOSPITAL.ID_HOSPITAL
	INNER JOIN TIME_TIMETABLE ON RECEPTION.ID_TIME=TIME_TIMETABLE.ID_TIME WHERE TIME_TIMETABLE.DAY_OF_THE_WEEK=@TIME AND 
	DOCTOR.FIRST_NAME=@FIRST_NAME AND DOCTOR.LAST_NAME=@LAST_NAME
END;
EXEC SELECT_RECEPTION_FOR_DATE_AND_FIRST_AND_LAST_NAME_DOCTOR '18-11-2020','Kir1','1B5k33o'
------------------------------------------------------------------
CREATE PROCEDURE SELECT_TRIGGER_HISTORY
AS
BEGIN
	SELECT * FROM History;
END
------------------------------------------------------------------ ŒÕ≈÷ œ–Œ÷≈ƒ”– ƒÀﬂ œŒÀ”◊≈Õ»ﬂ ƒ¿ÕÕ€’
------------------------------------------------------------------œ–Œ÷≈ƒ”–€ ƒÀﬂ ”ƒ¿À≈Õ»ﬂ ƒ¿ÕÕ€’
------------------------------------------------------------------
CREATE PROCEDURE DEL_RECEPTION_BY_ID
@ID_RECEPTION INT
AS
DECLARE @ID_TIME INT
BEGIN
BEGIN TRY
	IF NOT EXISTS(SELECT ID_RECEPTION FROM RECEPTION WHERE ID_RECEPTION=@ID_RECEPTION) 
			BEGIN
				PRINT '“¿ Œ√Œ “¿ÀŒÕ¿ Õ≈“”'
			END;
	ELSE
		BEGIN
			SET @ID_TIME=(SELECT ID_TIME FROM RECEPTION WHERE ID_RECEPTION=@ID_RECEPTION)
			DELETE RECEPTION WHERE ID_RECEPTION=@ID_RECEPTION
			DELETE TIME_TIMETABLE WHERE ID_TIME=@ID_TIME
			PRINT '”ƒ¿À≈Õ»≈ œ–ŒÿÀŒ ”—œ≈ÿÕŒ'
		END;
				END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;

DROP PROCEDURE DEL_RECEPTION_BY_ID
EXEC DEL_RECEPTION_BY_ID 18
SELECT * FROM HOSPITAL;
SELECT * FROM DEPARTMENT
SELECT  *FROM DOCTOR;
SELECT  *FROM PASSWORD_TABLE;
SELECT  *FROM PATIENT;
SELECT  *FROM RECEPTION;
SELECT  *FROM SPECIALTY;
SELECT  *FROM TIME_TIMETABLE;
------------------------------------------------------------------
CREATE PROCEDURE DEL_PATIENT_BY_ID
@ID_PATIENT INT
AS
BEGIN
BEGIN TRY
	IF NOT EXISTS(SELECT ID_PATIENT FROM PATIENT WHERE ID_PATIENT=@ID_PATIENT) 
			BEGIN
				PRINT '“¿ Œ√Œ ◊≈ÀŒ¬≈ ¿ Õ≈“”'
			END;
	ELSE
		BEGIN
			DELETE PASSWORD_TABLE WHERE ID_PATIENT=@ID_PATIENT
			DELETE RECEPTION WHERE ID_PATIENT=@ID_PATIENT
			DELETE PATIENT WHERE ID_PATIENT=@ID_PATIENT
			EXEC DEL_TIME
			PRINT '”ƒ¿À≈Õ»≈ œ–ŒÿÀŒ ”—œ≈ÿÕŒ'
		END;
				END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
DROP PROCEDURE DEL_PATIENT_BY_ID
SELECT  *FROM PATIENT;
EXEC DEL_PATIENT_BY_ID 7
SELECT * FROM HOSPITAL;
SELECT * FROM DEPARTMENT
SELECT  *FROM DOCTOR;
SELECT  *FROM PASSWORD_TABLE;
SELECT  *FROM PATIENT;
SELECT  *FROM RECEPTION;
SELECT  *FROM SPECIALTY;
SELECT  *FROM TIME_TIMETABLE;
------------------------------------------------------------------
CREATE PROCEDURE DEL_TIME
AS
BEGIN
BEGIN TRY
	IF NOT EXISTS(SELECT ID_TIME FROM TIME_TIMETABLE WHERE DAY_OF_THE_WEEK<GETDATE()) 
			BEGIN			
				PRINT 'C ¬–≈Ã≈Õ≈Ã ¬—® Œ ≈… Õ»◊≈√Œ Õ≈ Õ¿ƒŒ ”ƒ¿Àﬂ“‹'
			END;
	ELSE
		BEGIN
			DELETE TIME_TIMETABLE WHERE DAY_OF_THE_WEEK<GETDATE()
				PRINT '”ƒ¿À≈Õ»≈ œ–ŒÿÀŒ ”—œ≈ÿÕŒ'
		END;
				END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
CREATE PROCEDURE DEL_ALL_TIME
AS
BEGIN
BEGIN TRY
	IF NOT EXISTS(SELECT ID_TIME FROM TIME_TIMETABLE ) 
			BEGIN			
				PRINT 'Õ≈◊≈√Œ ”ƒ¿Àﬂ“‹'
			END;
	ELSE
		BEGIN
			DELETE TIME_TIMETABLE 
				PRINT '”ƒ¿À≈Õ»≈ œ–ŒÿÀŒ ”—œ≈ÿÕŒ'
		END;
				END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
DROP PROCEDURE DEL_TIME
EXEC DEL_TIME
EXEC DEL_ALL_TIME
SELECT * FROM HOSPITAL;
SELECT * FROM DEPARTMENT
SELECT  *FROM DOCTOR;
SELECT  *FROM PASSWORD_TABLE;
SELECT  *FROM PATIENT;
SELECT  *FROM RECEPTION;
SELECT  *FROM SPECIALTY;
SELECT  *FROM TIME_TIMETABLE;
------------------------------------------------------------------
DROP PROCEDURE DEL_DOCTOR_BY_ID
CREATE PROCEDURE DEL_DOCTOR_BY_ID
@ID_DOCTOR INT
AS
BEGIN
	BEGIN TRY
	IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE ID_DOCTOR=@ID_DOCTOR) 
			BEGIN			
				PRINT '“¿ Œ√Œ ¬–¿◊¿ Õ≈“”'
			END;
	ELSE
		BEGIN
			DELETE PASSWORD_TABLE WHERE ID_DOCTOR=@ID_DOCTOR
			DELETE RECEPTION WHERE ID_DOCTOR=@ID_DOCTOR
			DELETE TIME_TIMETABLE WHERE ID_DOCTOR=@ID_DOCTOR
			DELETE SPECIALTY WHERE ID_DOCTOR=@ID_DOCTOR 
			DELETE DOCTOR WHERE ID_DOCTOR=@ID_DOCTOR 
				PRINT '”ƒ¿À≈Õ»≈ œ–ŒÿÀŒ ”—œ≈ÿÕŒ'
		END;
				END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
SELECT  *FROM DOCTOR;
EXEC DEL_DOCTOR_BY_ID 9
SELECT * FROM HOSPITAL;
SELECT * FROM DEPARTMENT
SELECT  *FROM DOCTOR;
SELECT  *FROM PASSWORD_TABLE;
SELECT  *FROM PATIENT;
SELECT  *FROM RECEPTION;
SELECT  *FROM SPECIALTY;
SELECT  *FROM TIME_TIMETABLE;
------------------------------------------------------------------
DROP PROCEDURE DEL_DEPARTMENT_BY_ID
CREATE PROCEDURE DEL_DEPARTMENT_BY_ID
@ID_DEPARTMENT INT
AS
BEGIN
	BEGIN TRY
	IF NOT EXISTS(SELECT ID_DEPARTMENT FROM DEPARTMENT WHERE ID_DEPARTMENT=@ID_DEPARTMENT) 
			BEGIN			
				PRINT '“¿ Œ√Œ Œ“ƒ≈À≈Õ»ﬂ Õ≈“”'
			END;
	ELSE
		BEGIN
		DECLARE @ID_DOCTOR INT
		DECLARE CUR_DEL_DEPARTMENT CURSOR FOR SELECT ID_DOCTOR FROM DOCTOR WHERE ID_DEPARTMENT=@ID_DEPARTMENT
			
			OPEN CUR_DEL_DEPARTMENT
		    FETCH NEXT FROM CUR_DEL_DEPARTMENT INTO @ID_DOCTOR

		    WHILE @@FETCH_STATUS = 0
		    BEGIN
				exec DEL_DOCTOR_BY_ID @ID_DOCTOR
				FETCH NEXT FROM CUR_DEL_DEPARTMENT INTO @ID_DOCTOR
		    END
	   	    CLOSE CUR_DEL_DEPARTMENT
			DEALLOCATE CUR_DEL_DEPARTMENT
			DELETE DEPARTMENT WHERE ID_DEPARTMENT=@ID_DEPARTMENT
			PRINT '”ƒ¿À≈Õ»≈ œ–ŒÿÀŒ ”—œ≈ÿÕŒ'

		END;
				END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
EXEC  DEL_DEPARTMENT_BY_ID 4

SELECT * FROM HOSPITAL;
SELECT * FROM DEPARTMENT
SELECT  *FROM DOCTOR;
SELECT  *FROM PASSWORD_TABLE;
SELECT  *FROM PATIENT;
SELECT  *FROM RECEPTION;
SELECT  *FROM SPECIALTY;
SELECT  *FROM TIME_TIMETABLE;
------------------------------------------------------------------
CREATE PROCEDURE DEL_HOSPITAL_BY_ID
@ID_HOSPITAL INT
AS
BEGIN
BEGIN TRY
	IF NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE ID_HOSPITAL=@ID_HOSPITAL) 
			BEGIN			
				PRINT '“¿ Œ… œŒÀ» À»Õ» » Õ≈“”'
			END;
	ELSE
		BEGIN
		DECLARE @ID_DEPARTMENT INT
		DECLARE CUR_DEL_HOSPITAL CURSOR FOR SELECT ID_DEPARTMENT FROM DEPARTMENT WHERE ID_HOSPITAL=@ID_HOSPITAL
			
			OPEN CUR_DEL_HOSPITAL
		    FETCH NEXT FROM CUR_DEL_HOSPITAL INTO @ID_DEPARTMENT

		    WHILE @@FETCH_STATUS = 0
		    BEGIN
				exec DEL_DEPARTMENT_BY_ID @ID_HOSPITAL
				FETCH NEXT FROM CUR_DEL_HOSPITAL INTO @ID_DEPARTMENT
		    END
	   	    CLOSE CUR_DEL_HOSPITAL
			DEALLOCATE CUR_DEL_HOSPITAL
			DELETE HOSPITAL WHERE ID_HOSPITAL=@ID_HOSPITAL
			PRINT '”ƒ¿À≈Õ»≈ œ–ŒÿÀŒ ”—œ≈ÿÕŒ'

		END;
				END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
EXEC DEL_HOSPITAL_BY_ID 7
SELECT * FROM HOSPITAL;
SELECT * FROM DEPARTMENT
SELECT  *FROM DOCTOR;
SELECT  *FROM PASSWORD_TABLE;
SELECT  *FROM PATIENT;
SELECT  *FROM RECEPTION;
SELECT  *FROM SPECIALTY;
SELECT  *FROM TIME_TIMETABLE;

------------------------------------------------------------------œ–Œ÷≈ƒ”–€ ƒÀﬂ »«Ã≈Õ≈Õ»ﬂ ƒ¿ÕÕ€’
CREATE PROCEDURE UPDATE_HOSPITAL_INPUT_NAME
@COUNTRY NVARCHAR(40),
@CITY NVARCHAR(40),
@AREA NVARCHAR(40),
@NAME_HOSPITAL NVARCHAR(60),
@REGISTRATION_PHONE NVARCHAR(10)
AS 
BEGIN
DECLARE @ID_HOSPITAL INT
BEGIN TRY
IF NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL) 
			BEGIN
				PRINT '“¿ Œ… œŒÀ» À»Õ» » Õ≈“ '
			END;
ELSE
	BEGIN
		SET @ID_HOSPITAL=(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL)
		UPDATE HOSPITAL SET CITY=@CITY, COUNTRY=@COUNTRY,AREA=@AREA,REGISTRATION_PHONE=@REGISTRATION_PHONE WHERE ID_HOSPITAL =@ID_HOSPITAL
		PRINT 'Œœ≈–¿÷»ﬂ œ–Œ¬≈ƒ≈Õ¿ ”—œ≈ÿÕŒ'
	END;
		END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
DROP PROCEDURE UPDATE_HOSPITAL_INPUT_NAME
EXEC UPDATE_HOSPITAL_INPUT_NAME 'F','F','F','3G','+333'

------------------------------------------------------------------
CREATE PROCEDURE UPDATE_DEPARTMENT_INPUT_NAME
@NAME_DEPARTMENT NVARCHAR(30),
@NAME_DEPARTMENT1 NVARCHAR(30)
AS
BEGIN
BEGIN TRY
	DECLARE @ID_HOSPITAL INT
	IF NOT EXISTS(SELECT ID_DEPARTMENT FROM DEPARTMENT WHERE NAME_DEPARTMENT=@NAME_DEPARTMENT) 
			BEGIN
				PRINT '“¿ Œ√Œ ƒ≈œ¿–“¿Ã≈Õ“¿ Õ≈“'
			END;
	ELSE 
		BEGIN
			IF NOT EXISTS(SELECT ID_DEPARTMENT FROM DEPARTMENT WHERE NAME_DEPARTMENT=@NAME_DEPARTMENT1) 
			BEGIN
				UPDATE DEPARTMENT SET NAME_DEPARTMENT=@NAME_DEPARTMENT1 WHERE NAME_DEPARTMENT=@NAME_DEPARTMENT
				PRINT 'Œœ≈–¿÷»ﬂ œ–Œ¬≈ƒ≈Õ¿ ”—œ≈ÿÕŒ'		
			END
			ELSE
			BEGIN
				PRINT 'ƒ≈œ¿–“¿Ã≈Õ“ — “¿ »Ã »Ã≈Õ≈Ã —”Ÿ≈—“¬”≈“'
			END;	
		END;
			END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
DROP PROCEDURE UPDATE_DEPARTMENT_INPUT_NAME
EXEC UPDATE_DEPARTMENT_INPUT_NAME '1133EFmeD11nt1','FC'
------------------------------------------------------------------
DROP PROCEDURE UPDATE_DOCTOR
CREATE PROCEDURE UPDATE_DOCTOR
@ID_DOCTOR INT,
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20),
@PATRONY NVARCHAR(20),
@OFFICE NVARCHAR(10),
@QUALIFICATION NVARCHAR(30),
@BDAY DATE,
@DATE_STARTED DATE,
@POSITION NVARCHAR(20),
@PHONE_NUMBER NVARCHAR(20)=NULL,
@PASSWORD_USER NVARCHAR(60)='123',
@SPECIALTY_NAME NVARCHAR(50)
AS
DECLARE @FLAG INT=0
BEGIN
BEGIN TRY
	IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE ID_DOCTOR=@ID_DOCTOR) 
			BEGIN
				PRINT '“¿ Œ√Œ ¬–¿◊¿ Õ≈“'
			END;
	ELSE
		BEGIN
			IF @POSITION='„Î. ‚‡˜' OR @POSITION='Á‡Ï. ÓÚ‰ÂÎÂÌËˇ'
			BEGIN
				PRINT '“¿ »≈ ƒŒÀ∆ÕŒ—“» Õ≈À‹«ﬂ »«Ã≈Õ»“‹!!!'
			END
			ELSE
			BEGIN
				IF NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE  
							FIRST_NAME=@FIRST_NAME AND LAST_NAME=@LAST_NAME AND PATRONY=@PATRONY AND OFFICE=@OFFICE AND QUALIFICATION=@QUALIFICATION AND
							BDAY=@BDAY AND DATE_STARTED=@DATE_STARTED)
				 BEGIN
				UPDATE DOCTOR SET POSITION=@POSITION,FIRST_NAME=@FIRST_NAME,LAST_NAME=@LAST_NAME,PATRONY=@PATRONY,OFFICE=@OFFICE,
				QUALIFICATION=@QUALIFICATION,BDAY=@BDAY,DATE_STARTED=@DATE_STARTED,PHONE_NUMBER=@PHONE_NUMBER			
				OPEN SYMMETRIC KEY SSN_Key_1  
				DECRYPTION BY CERTIFICATE HumanResources;  
				UPDATE PASSWORD_TABLE 
				SET USER_PASSWORD = EncryptByKey(Key_GUID('SSN_Key_1'), @PASSWORD_USER) where ID_DOCTOR=@ID_DOCTOR ; 
				UPDATE SPECIALTY SET SPECIALTY_NAME=@SPECIALTY_NAME WHERE SPECIALTY.ID_DOCTOR=@ID_DOCTOR
				PRINT 'Œœ≈–¿÷»ﬂ œ–Œ¬≈ƒ≈Õ¿ ”—œ≈ÿÕŒ'
				END
				ELSE
				BEGIN
				PRINT 'Õ≈¬≈–Õ€≈ ƒ¿ÕÕ€≈'
				END;
			END

			
		END;
	END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
EXEC  UPDATE_DOCTOR 1,'KI1RILL','BOLVAKO','SERGEEVICH','123','3 YEARS','12-12-2000','12-12-2020','¬–¿◊','+375223','LOX','LOX'

------------------------------------------------------------------
DROP PROCEDURE UPDATE_PATIENT;
CREATE PROCEDURE UPDATE_PATIENT
@ID_PATIENT INT,
@GENDER CHAR(1),
@FIRST_NAME NVARCHAR(20),
@LAST_NAME NVARCHAR(20),
@PATRONY NVARCHAR(20),
@BDAY DATE,
@HOME_ADRESS NVARCHAR(40),
@PASSPORT_ID NVARCHAR(30)=NULL,
@NAME_HOSPITAL NVARCHAR(60),
@PLACE_OF_WORK_OR_STUDY NVARCHAR(40)=NULL,
@DISABILITY NVARCHAR(40)=NULL,
@CHRONIC_DISEASES NVARCHAR(40)=NULL,
@PASSWORD_USER NVARCHAR(60)
AS
BEGIN
DECLARE @ID_HOSPITAL INT
BEGIN TRY
	IF NOT EXISTS(SELECT ID_PATIENT FROM PATIENT WHERE ID_PATIENT=@ID_PATIENT) OR (@GENDER!='M' AND @GENDER!='W') OR
	NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL =@NAME_HOSPITAL )
			BEGIN
				PRINT '“¿ Œ√Œ œ¿÷»≈Õ“¿ Õ≈“ »À» Õ≈¬≈–ÕŒ ” ¿«¿Õ œŒÀ »À» Õ≈¬≈–ÕŒ ” ¿«¿Õ¿ œŒÀ» À»Õ» ¿'
			END;
	ELSE
		BEGIN
		SET @ID_HOSPITAL=(SELECT ID_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL=@NAME_HOSPITAL);
			IF NOT EXISTS(SELECT ID_PATIENT FROM PATIENT WHERE GENDER=@GENDER AND FIRST_NAME=@FIRST_NAME AND LAST_NAME=@LAST_NAME AND PATRONY=@PATRONY AND BDAY=@BDAY AND HOME_ADRESS=@HOME_ADRESS
		AND PASSPORT_ID=@PASSPORT_ID  ) 
			BEGIN
				UPDATE PATIENT SET GENDER=@GENDER,FIRST_NAME=@FIRST_NAME,LAST_NAME=@LAST_NAME,PATRONY=@PATRONY,BDAY=@BDAY,
				HOME_ADRESS=@HOME_ADRESS,PASSPORT_ID=@PASSPORT_ID,ID_HOSPITAL=@ID_HOSPITAL,PLACE_OF_WORK_OR_STUDY=@PLACE_OF_WORK_OR_STUDY,
				DISABILITY=@DISABILITY,CHRONIC_DISEASES=@CHRONIC_DISEASES WHERE ID_PATIENT=@ID_PATIENT
				OPEN SYMMETRIC KEY SSN_Key_1  
						DECRYPTION BY CERTIFICATE HumanResources;  
						UPDATE PASSWORD_TABLE 
						SET USER_PASSWORD = EncryptByKey(Key_GUID('SSN_Key_1'), @PASSWORD_USER) where ID_PATIENT=@ID_PATIENT ;
						PRINT 'Œœ≈–¿÷»ﬂ œ–Œ¬≈ƒ≈Õ¿ ”—œ≈ÿÕŒ'
			END;
			ELSE
			BEGIN
			PRINT '“¿ Œ… ◊≈ÀŒ¬≈  ”∆≈ ≈—“‹'
			END;
		END;
	END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
EXEC UPDATE_PATIENT 3,'QR','RANTON','ANTON','LOX','20-10-2000','FFF','1234214123','3G','RRR','RRR','RRRR','23RRR'
------------------------------------------------------------------
DROP PROCEDURE UPDATE_RECEPTION
CREATE PROCEDURE UPDATE_RECEPTION
@ID_RECEPTION INT,
@ID_DOCTOR INT,
@ID_PATIENT INT,
@ID_HOSPITAL INT,
@ID_TIME INT,
@TIME NVARCHAR(20),
@DATE DATE,
@SYMPTOMS NVARCHAR(100)=NULL,
@DIAGNOSIS NVARCHAR(100),
@MEDICINES NVARCHAR(100),
@COMMENTS NVARCHAR(200)=NULL
AS
DECLARE @FLAG INT =0;
BEGIN
BEGIN TRY
	IF NOT EXISTS(SELECT ID_RECEPTION FROM RECEPTION WHERE ID_RECEPTION=@ID_RECEPTION) OR 
	   NOT EXISTS(SELECT ID_DOCTOR FROM DOCTOR WHERE ID_DOCTOR=@ID_DOCTOR) OR
	   NOT EXISTS(SELECT ID_PATIENT FROM PATIENT WHERE ID_PATIENT=@ID_PATIENT) OR
	   NOT EXISTS(SELECT ID_HOSPITAL FROM HOSPITAL WHERE ID_HOSPITAL=@ID_HOSPITAL) OR
	      NOT EXISTS(SELECT ID_TIME FROM TIME_TIMETABLE WHERE ID_TIME=@ID_TIME) 
			BEGIN
				PRINT '“¿ Œ√Œ “¿ÀŒÕ¿|¬–¿◊¿|œ¿÷»≈Õ“¿|œŒÀ» À»Õ» »|¬–≈Ã≈Õ» Õ≈“'
			END;
	ELSE
		BEGIN
		IF(GETDATE()>@DATE) OR DATENAME(weekday, @DATE)='‚ÓÒÍÂÒÂÌ¸Â' OR DATENAME(weekday, @DATE)='ÒÛ··ÓÚ‡' OR
		(DATENAME(hour, @TIME)=13 OR DATENAME(hour, @TIME)=14  OR (DATENAME(hour, @TIME)<10  OR DATENAME(hour, @TIME)>17))
		BEGIN
			SET @FLAG=1
			PRINT 'Õ≈¬≈–Õ¿ﬂ ƒ¿“¿ »À» ¬–≈Ãﬂ'
		END
	IF @FLAG!=1
		BEGIN
			PRINT '¬—® √”ƒ'
			UPDATE TIME_TIMETABLE SET ID_DOCTOR=@ID_DOCTOR,DAY_OF_THE_WEEK=@DATE,STARTING_A_PATIENT_RECEPTION=@TIME
			WHERE ID_TIME=@ID_TIME
			UPDATE RECEPTION SET ID_DOCTOR=@ID_DOCTOR,ID_PATIENT=@ID_PATIENT,ID_HOSPITAL=@ID_HOSPITAL,ID_TIME=@ID_TIME,
			SYMPTOMS=@SYMPTOMS,DIAGNOSIS=@DIAGNOSIS,MEDICINES=@MEDICINES,COMMENTS=@COMMENTS WHERE ID_RECEPTION=@ID_RECEPTION
		END;
		END
			END TRY
	BEGIN CATCH
	PRINT 'Error ' + CONVERT(VARCHAR, ERROR_NUMBER()) + ':' + ERROR_MESSAGE()
	END CATCH
END;
EXEC UPDATE_RECEPTION 1,1,2,3,1,'12:10','19-11-2020','Q','Q','Q','Q'
------------------------------------------------------------------“–»√√≈–€
CREATE TABLE HISTORY
(
    Id INT IDENTITY PRIMARY KEY,
    ID_DOCTOR1 INT NOT NULL,
    Operation NVARCHAR(200) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
);
DROP TABLE History;
CREATE TRIGGER DOCTOR_INSERT
ON DOCTOR
AFTER INSERT
AS
INSERT INTO HISTORY (ID_DOCTOR1, Operation)
SELECT ID_DOCTOR, 'FIRST NAME:' +LAST_NAME +'|POSITION'+POSITION+ '|LAST NAME' + FIRST_NAME+'|INS'
FROM INSERTED
DROP TRIGGER DOCTOR_UPDATE
CREATE TRIGGER DOCTOR_DELETED
ON DOCTOR
AFTER DELETE
AS
INSERT INTO HISTORY (ID_DOCTOR1, Operation)
SELECT ID_DOCTOR, 'FIRST NAME:' +LAST_NAME +'|POSITION'+POSITION+ '|LAST NAME' + FIRST_NAME+'|DEL'
FROM DELETED


CREATE TRIGGER DOCTOR_UPDATE
ON DOCTOR
AFTER UPDATE
AS
INSERT INTO HISTORY (ID_DOCTOR1, Operation)
SELECT ID_DOCTOR, 'FIRST NAME:' +LAST_NAME +'|POSITION'+POSITION+ '|LAST NAME' + FIRST_NAME+'|UPDATE'
FROM INSERTED
SELECT * FROM History;
CREATE PROCEDURE SELECT_ALL_HISTORY
AS
BEGIN
SELECT * FROM HISTORY
END;
DROP PROCEDURE CLEAR_ALL_HISTORY
CREATE PROCEDURE CLEAR_ALL_HISTORY
AS
BEGIN
	DELETE HISTORY
	PRINT 'Œ◊»—“¿ ¬€œŒÀÕ≈Õ¿ ”—œ≈ÿÕ¿'
END;
EXEC CLEAR_ALL_HISTORY
------------------------------------------------------------------100 000 ROWS
CREATE PROCEDURE CREATE_STRING_40
	@SIZE integer,
	@NAME char(40) OUTPUT
AS
BEGIN
	SET @NAME = (
	SELECT
		c1 AS [text()]
	FROM
		(
		SELECT TOP (40) c1
		FROM
		  (
		VALUES
		  ('A'), ('B'), ('C'), ('D'), ('E'), ('F'), ('G'), ('H'), ('I'), ('J'),
		  ('K'), ('L'), ('M'), ('N'), ('O'), ('P'), ('Q'), ('R'), ('S'), ('T'),
		  ('U'), ('V'), ('W'), ('X'), ('Y'), ('Z')
		  ) AS T1(c1)
		ORDER BY ABS(CHECKSUM(NEWID()))
		) AS T2
	FOR XML PATH('')
	);
END
CREATE PROCEDURE CREATE_STRING_60
	@SIZE integer,
	@NAME char(60) OUTPUT
AS
BEGIN
	SET @NAME = (
	SELECT
		c1 AS [text()]
	FROM
		(
		SELECT TOP (60) c1
		FROM
		  (
		VALUES
		  ('A'), ('B'), ('C'), ('D'), ('E'), ('F'), ('G'), ('H'), ('I'), ('J'),
		  ('K'), ('L'), ('M'), ('N'), ('O'), ('P'), ('Q'), ('R'), ('S'), ('T'),
		  ('U'), ('V'), ('W'), ('X'), ('Y'), ('Z')
		  ) AS T1(c1)
		ORDER BY ABS(CHECKSUM(NEWID()))
		) AS T2
	FOR XML PATH('')
	);
END

CREATE PROCEDURE CREATE_STRING_10
	@SIZE integer,
	@NAME char(10) OUTPUT
AS
BEGIN
	SET @NAME = (
	SELECT
		c1 AS [text()]
	FROM
		(
		SELECT TOP (10) c1
		FROM
		  (
		VALUES
		  ('A'), ('B'), ('C'), ('D'), ('E'), ('F'), ('G'), ('H'), ('I'), ('J'),
		  ('K'), ('L'), ('M'), ('N'), ('O'), ('P'), ('Q'), ('R'), ('S'), ('T'),
		  ('U'), ('V'), ('W'), ('X'), ('Y'), ('Z')
		  ) AS T1(c1)
		ORDER BY ABS(CHECKSUM(NEWID()))
		) AS T2
	FOR XML PATH('')
	);
END

drop PROCEDURE INSERT_HOSPITAL
CREATE PROCEDURE INSERT_HOSPITAL
				@SIZE INT
AS
Begin

	WHILE @SIZE > 0
    BEGIN
		DECLARE @NAME_HOSPITAL NVARCHAR(60)
		EXEC CREATE_STRING_10 60,@NAME_HOSPITAL OUTPUT
		EXEC ADD_HOSPITAL 'Belarus','f','f',@NAME_HOSPITAL,'--'
        SET @SIZE = @SIZE - 1
    END;

END;
EXEC DEL_DATA_ALL_TABLE
SELECT COUNT(*) FROM HOSPITAL;
EXEC INSERT_HOSPITAL 100000;
------------------------------------------------------------------»ÃœŒ–“
DROP Procedure IMPORT_HOSPITAL
CREATE PROCEDURE IMPORT_HOSPITAL
AS
BEGIN

	DECLARE @HOSPITAL VARCHAR(max);
	SELECT @HOSPITAL =
		BulkColumn
		FROM OPENROWSET(BULK 'C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\Hospital.json', Single_Blob) JSON;
	PRINT @HOSPITAL
	IF (ISJSON(@HOSPITAL) = 1)
	BEGIN
		DECLARE @COUNTRY NVARCHAR(40)
		DECLARE @CITY NVARCHAR(40)
		DECLARE @AREA NVARCHAR(40)
		DECLARE @NAME_HOSPITAL NVARCHAR(60)
		DECLARE @REGISTRATION_PHONE NVARCHAR(10)
		DECLARE HOSPITAL_CURSOR CURSOR FOR
			SELECT * 
			FROM OPENJSON(@HOSPITAL, '$.HOSPITAL')
			WITH(
				COUNTRY NVARCHAR(40) '$.COUNTRY',
				CITY NVARCHAR(40)  '$.CITY',
				AREA NVARCHAR(40) '$.AREA',
				NAME_HOSPITAL NVARCHAR(60)   '$.NAME_HOSPITAL',
				REGISTRATION_PHONE NVARCHAR(10)   '$.REGISTRATION_PHONE'
				);
		OPEN HOSPITAL_CURSOR;

		FETCH NEXT FROM HOSPITAL_CURSOR INTO @COUNTRY, @CITY, @AREA, @NAME_HOSPITAL,@REGISTRATION_PHONE;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC ADD_HOSPITAL @COUNTRY,@CITY,@AREA,@NAME_HOSPITAL,@REGISTRATION_PHONE
					FETCH NEXT FROM HOSPITAL_CURSOR INTO @COUNTRY, @CITY, @AREA, @NAME_HOSPITAL,@REGISTRATION_PHONE;
		END;
		

		CLOSE HOSPITAL_CURSOR;
		DEALLOCATE HOSPITAL_CURSOR;
------------------------------------------------------------------
		DECLARE @NAME_HOSPITAL1 NVARCHAR(60)
		DECLARE @NAME_DEPARTMENT NVARCHAR(30)

		DECLARE DEPARTMENT_CURSOR CURSOR FOR
			SELECT * 
			FROM OPENJSON(@HOSPITAL, '$.DEPARTMENT')
			WITH(
				NAME_HOSPITAL1 NVARCHAR(60) '$.NAME_HOSPITAL',
				NAME_DEPARTMENT NVARCHAR(30)  '$.NAME_DEPARTMENT'
				);
		OPEN DEPARTMENT_CURSOR;

		FETCH NEXT FROM DEPARTMENT_CURSOR INTO @NAME_HOSPITAL1,@NAME_DEPARTMENT
		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC ADD_DEPARTMENT @NAME_DEPARTMENT,@NAME_HOSPITAL1
					FETCH NEXT FROM DEPARTMENT_CURSOR INTO @NAME_HOSPITAL1,@NAME_DEPARTMENT
		END;
		

		CLOSE DEPARTMENT_CURSOR;
		DEALLOCATE DEPARTMENT_CURSOR;
------------------------------------------------------------------
	DECLARE	@NAME_DEPARTMENT1 NVARCHAR(30)=NULL,
		@FIRST_NAME NVARCHAR(20),
		@LAST_NAME NVARCHAR(20),
		@PATRONY NVARCHAR(20),
		@OFFICE NVARCHAR(10),
		@QUALIFICATION NVARCHAR(30),
		@BDAY DATE,
		@DATE_STARTED DATE,
		@POSITION NVARCHAR(20),
		@PHONE_NUMBER NVARCHAR(20)=NULL,
		@NAME_HOSPITAL2 NVARCHAR(60),
		@PASSWORD_USER NVARCHAR(60)='123',
		@SPECIALTY_NAME NVARCHAR(50)

		DECLARE DOCTOR_CURSOR CURSOR FOR
			SELECT * 
			FROM OPENJSON(@HOSPITAL, '$.DOCTOR')
			WITH(
				NAME_DEPARTMENT1 NVARCHAR(30) '$.NAME_DEPARTMENT',
				FIRST_NAME NVARCHAR(20)  '$.FIRST_NAME',
				LAST_NAME NVARCHAR(20) '$.LAST_NAME',
				PATRONY NVARCHAR(20)  '$.PATRONY',
				OFFICE NVARCHAR(10) '$.OFFICE',
				QUALIFICATION NVARCHAR(30)  '$.QUALIFICATION',
				BDAY DATE '$.BDAY',
				DATE_STARTED DATE  '$.DATE_STARTED',
				POSITION NVARCHAR(20) '$.POSITION',
				PHONE_NUMBER NVARCHAR(20)  '$.PHONE_NUMBER',
				NAME_HOSPITAL2 NVARCHAR(60) '$.NAME_HOSPITAL',
				PASSWORD_USER NVARCHAR(60)  '$.PASSWORD_USER',
				SPECIALTY_NAME NVARCHAR(50) '$.SPECIALTY_NAME'
				);
		OPEN DOCTOR_CURSOR;

		FETCH NEXT FROM DOCTOR_CURSOR INTO @NAME_DEPARTMENT1,@FIRST_NAME,@LAST_NAME,@PATRONY,@OFFICE,@QUALIFICATION,
		@BDAY,@DATE_STARTED,@POSITION,@PHONE_NUMBER,@NAME_HOSPITAL2,@PASSWORD_USER,@SPECIALTY_NAME
		WHILE @@FETCH_STATUS = 0
		BEGIN

			IF @NAME_DEPARTMENT1 IS NULL
			BEGIN
			EXEC ADD_DOCTOR NULL,@FIRST_NAME,@LAST_NAME,@PATRONY,@OFFICE,@QUALIFICATION
			,@BDAY,@DATE_STARTED,
			'„Î. ‚‡˜',@PHONE_NUMBER,@NAME_HOSPITAL2,@PASSWORD_USER,@SPECIALTY_NAME
			END
			ELSE
			BEGIN 
			EXEC ADD_DOCTOR @NAME_DEPARTMENT=@NAME_DEPARTMENT1,@FIRST_NAME=@FIRST_NAME,@LAST_NAME=@LAST_NAME,@PATRONY=@PATRONY,@OFFICE=@OFFICE,@QUALIFICATION=@QUALIFICATION
			,@BDAY=@BDAY,@DATE_STARTED=@DATE_STARTED,
			@POSITION=@POSITION,@PHONE_NUMBER=@PHONE_NUMBER,@NAME_HOSPITAL=@NAME_HOSPITAL2,@PASSWORD_USER=@PASSWORD_USER,@SPECIALTY_NAME=@SPECIALTY_NAME
			END
			SET @NAME_DEPARTMENT1=NULL
		FETCH NEXT FROM DOCTOR_CURSOR INTO @NAME_DEPARTMENT1,@FIRST_NAME,@LAST_NAME,@PATRONY,@OFFICE,@QUALIFICATION,
		@BDAY,@DATE_STARTED,@POSITION,@PHONE_NUMBER,@NAME_HOSPITAL2,@PASSWORD_USER,@SPECIALTY_NAME
		END;
		

		CLOSE DOCTOR_CURSOR;
		DEALLOCATE DOCTOR_CURSOR;
------------------------------------------------------------------
	DECLARE @GENDER CHAR(1),
	@FIRST_NAME1 NVARCHAR(20),
	@LAST_NAME1 NVARCHAR(20),
	@PATRONY1 NVARCHAR(20),
	@BDAY1 DATE,
	@HOME_ADRESS NVARCHAR(40),
	@PASSPORT_ID NVARCHAR(30)=NULL,
	@NAME_HOSPITAL3 NVARCHAR(60),
	@PLACE_OF_WORK_OR_STUDY NVARCHAR(40)=NULL,
	@DISABILITY NVARCHAR(40)=NULL,
	@CHRONIC_DISEASES NVARCHAR(40)=NULL,
	@PASSWORD_USER1 NVARCHAR(60)='123'

	DECLARE PATIENT_CURSOR CURSOR FOR
			SELECT * 
			FROM OPENJSON(@HOSPITAL, '$.PATIENT')
			WITH(
				GENDER CHAR(1) '$.GENDER',
				FIRST_NAME1 NVARCHAR(20) '$.FIRST_NAME',
				LAST_NAME1 NVARCHAR(20)  '$.LAST_NAME',
				PATRONY1 NVARCHAR(20) '$.PATRONY',
				BDAY1 DATE '$.BDAY',
				HOME_ADRESS NVARCHAR(40) '$.HOME_ADRESS',
				PASSPORT_ID NVARCHAR(30)  '$.PASSPORT_ID',
				NAME_HOSPITAL3 NVARCHAR(60) '$.NAME_HOSPITAL',
				PLACE_OF_WORK_OR_STUDY NVARCHAR(40) '$.PLACE_OF_WORK_OR_STUDY',
				DISABILITY NVARCHAR(40) '$.DISABILITY',
				CHRONIC_DISEASES NVARCHAR(40)  '$.CHRONIC_DISEASES',
				PASSWORD_USER1 NVARCHAR(60)  '$.PASSWORD_USER'
				);
		OPEN PATIENT_CURSOR;

		FETCH NEXT FROM PATIENT_CURSOR INTO @GENDER,@FIRST_NAME1,@LAST_NAME1,@PATRONY1
		,@BDAY1,@HOME_ADRESS,
		@PASSPORT_ID,@NAME_HOSPITAL3,@PLACE_OF_WORK_OR_STUDY,@DISABILITY,@CHRONIC_DISEASES,@PASSWORD_USER1
		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC ADD_PATIENT @GENDER ,
	@FIRST_NAME1 ,
	@LAST_NAME1 ,
	@PATRONY1 ,
	@BDAY1 ,
	@HOME_ADRESS,
	@PASSPORT_ID ,
	@NAME_HOSPITAL3 ,
	@PLACE_OF_WORK_OR_STUDY ,
	@DISABILITY ,
	@CHRONIC_DISEASES ,
	@PASSWORD_USER1 
			
			SET @PASSPORT_ID=NULL
			SET @PLACE_OF_WORK_OR_STUDY=NULL
			SET @DISABILITY=NULL
			SET @CHRONIC_DISEASES=NULL
			FETCH NEXT FROM PATIENT_CURSOR INTO @GENDER,@FIRST_NAME1,@LAST_NAME1,@PATRONY1
		,@BDAY1,@HOME_ADRESS,
		@PASSPORT_ID,@NAME_HOSPITAL3,@PLACE_OF_WORK_OR_STUDY,@DISABILITY,@CHRONIC_DISEASES,@PASSWORD_USER1
		END;
		

		CLOSE PATIENT_CURSOR;
		DEALLOCATE PATIENT_CURSOR;
------------------------------------------------------------------
	DECLARE @FIRST_NAME5 NVARCHAR(20)
	DECLARE @LAST_NAME5 NVARCHAR(20)
	DECLARE @SPECIALTY_NAME5 NVARCHAR(50)
	DECLARE @FIRST_NAME_PATIENT NVARCHAR(20)
	DECLARE @LAST_NAME__PATIENT NVARCHAR(20)
	DECLARE @NAME_HOSPITAL5 NVARCHAR(60)
	DECLARE @TIME1 NVARCHAR(20)
	DECLARE @DATE1 DATE
	DECLARE @SYMPTOMS NVARCHAR(100)=NULL
	DECLARE @DIAGNOSIS NVARCHAR(100)
	DECLARE @MEDICINES NVARCHAR(100)
	DECLARE @COMMENTS NVARCHAR(200)=NULL

	DECLARE RECEPTION_CURSOR CURSOR FOR
			SELECT * 
			FROM OPENJSON(@HOSPITAL, '$.RECEPTION')
			WITH(
				FIRST_NAME5 NVARCHAR(20) '$.FIRST_NAME',
				LAST_NAME5 NVARCHAR(20)  '$.LAST_NAME',
				SPECIALTY_NAME5 NVARCHAR(50) '$.SPECIALTY_NAME',
				FIRST_NAME_PATIENT NVARCHAR(20) '$.FIRST_NAME_PATIENT',
				LAST_NAME__PATIENT NVARCHAR(20) '$.LAST_NAME__PATIENT',
				NAME_HOSPITAL5 NVARCHAR(60)  '$.NAME_HOSPITAL',
				TIME1 NVARCHAR(20) '$.TIME',
				DATE1 DATE '$.DATE',
				SYMPTOMS NVARCHAR(100) '$.SYMPTOMS',
				DIAGNOSIS NVARCHAR(100)  '$.DIAGNOSIS',
				MEDICINES NVARCHAR(100)  '$.MEDICINES',
				COMMENTS NVARCHAR(200)  '$.COMMENTS'
				);
		OPEN RECEPTION_CURSOR;

		FETCH NEXT FROM RECEPTION_CURSOR INTO @FIRST_NAME5 ,@LAST_NAME5,@SPECIALTY_NAME5 ,@FIRST_NAME_PATIENT ,@LAST_NAME__PATIENT ,@NAME_HOSPITAL5 ,
											@TIME1 ,@DATE1 ,@SYMPTOMS ,@DIAGNOSIS ,@MEDICINES,@COMMENTS 
		WHILE @@FETCH_STATUS = 0
		BEGIN
			EXEC ADD_RECEPTION @FIRST_NAME5 ,@LAST_NAME5,@SPECIALTY_NAME5 ,@FIRST_NAME_PATIENT ,@LAST_NAME__PATIENT ,@NAME_HOSPITAL5 ,
											@TIME1 ,@DATE1 ,@SYMPTOMS ,@DIAGNOSIS ,@MEDICINES,@COMMENTS 
			
			SET @SYMPTOMS=NULL
			SET @COMMENTS=NULL
		FETCH NEXT FROM RECEPTION_CURSOR INTO @FIRST_NAME5 ,@LAST_NAME5,@SPECIALTY_NAME5 ,@FIRST_NAME_PATIENT ,@LAST_NAME__PATIENT ,@NAME_HOSPITAL5 ,
											@TIME1 ,@DATE1 ,@SYMPTOMS ,@DIAGNOSIS ,@MEDICINES,@COMMENTS 
		END;
		

		CLOSE RECEPTION_CURSOR;
		DEALLOCATE RECEPTION_CURSOR;
------------------------------------------------------------------
------------------------------------------------------------------
		PRINT 'Œœ≈–¿÷»ﬂ œ–Œ¬≈ƒ≈Õ¿ ”—œ≈ÿÕŒ'
	END

	ELSE
	BEGIN
		PRINT '‘¿…À —Œ—“¿¬À≈Õ Õ≈ ¬≈–ÕŒ';
	END
END;

EXEC IMPORT_HOSPITAL

------------------------------------------------------------------›ÍÒÔÓÚ ‰‡ÌÌ˚ı
USE courseDataBase;
CREATE PROCEDURE EXPORT_TO_JSON_HOSPITAL
AS
BEGIN
SELECT * FROM HOSPITAL FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase; SELECT NAME_HOSPITAL,COUNTRY,CITY,AREA,REGISTRATION_PHONE FROM HOSPITAL for json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_HOSPITAL.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;    
DROP PROCEDURE EXPORT_TO_JSON_HOSPITAL
EXEC EXPORT_TO_JSON_HOSPITAL
select * from hospital;

------------------------------------------------------------------
DROP PROCEDURE EXPORT_TO_JSON_DEPARTMENT
CREATE PROCEDURE EXPORT_TO_JSON_DEPARTMENT
AS
BEGIN
SELECT * FROM DEPARTMENT FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase; select * from DEPARTMENT for json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_DEPARTMENT.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;    

EXEC EXPORT_TO_JSON_DEPARTMENT
------------------------------------------------------------------
DROP PROCEDURE EXPORT_TO_JSON_DOCTOR
CREATE PROCEDURE EXPORT_TO_JSON_DOCTOR
AS
BEGIN
SELECT  * FROM DOCTOR  FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase; SELECT  * FROM DOCTOR FOR json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_DOCTOR.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;    

EXEC EXPORT_TO_JSON_DOCTOR
------------------------------------------------------------------
DROP PROCEDURE EXPORT_TO_JSON_PATIENT
CREATE PROCEDURE EXPORT_TO_JSON_PATIENT
AS
BEGIN
SELECT  * FROM PATIENT  FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase; SELECT  * FROM PATIENT FOR json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_PATIENT.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;    

EXEC EXPORT_TO_JSON_PATIENT
------------------------------------------------------------------
DROP PROCEDURE EXPORT_TO_JSON_RECEPTION
CREATE PROCEDURE EXPORT_TO_JSON_RECEPTION
AS
BEGIN
SELECT  * FROM RECEPTION  FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase; SELECT  * FROM RECEPTION FOR json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_RECEPTION.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;    

EXEC EXPORT_TO_JSON_RECEPTION
------------------------------------------------------------------
DROP PROCEDURE EXPORT_TO_JSON_SPECIALTY
CREATE PROCEDURE EXPORT_TO_JSON_SPECIALTY
AS
BEGIN
SELECT  * FROM SPECIALTY  FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase; SELECT  * FROM SPECIALTY FOR json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_SPECIALTY.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;    

EXEC EXPORT_TO_JSON_SPECIALTY
------------------------------------------------------------------
DROP PROCEDURE EXPORT_TO_JSON_TIME
CREATE PROCEDURE EXPORT_TO_JSON_TIME
AS
BEGIN
SELECT  * FROM TIME_TIMETABLE  FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase; SELECT  * FROM TIME_TIMETABLE FOR json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_TIME.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;    
exec  EXPORT_TO_JSON_TIME
------------------------------------------------------------------
drop PROCEDURE EXPORT_TO_JSON_PASSWORD 
CREATE PROCEDURE EXPORT_TO_JSON_PASSWORD
AS
BEGIN
 OPEN SYMMETRIC KEY SSN_Key_1
   DECRYPTION BY CERTIFICATE HumanResources;  
	SELECT  ID_DOCTOR,USER_PASSWORD,ID_PATIENT FROM  PASSWORD_TABLE  FOR json path, root('courseDataBase');

exec master.dbo.sp_configure 'show advanced options', 1
reconfigure with override
exec master.dbo.sp_configure 'xp_cmdshell', 1
reconfigure with override;

DECLARE @cmd NVARCHAR(255);
select @cmd = '
bcp "use courseDataBase;  SELECT  ID_DOCTOR,USER_PASSWORD,ID_PATIENT FROM  PASSWORD_TABLE FOR json path, root(''courseDataBase'');" ' +
'queryout "C:\ycheba\3course1sem\ÍÛÒ‡˜_·‰\EXPORT_PASSWORD.json" -S .\SQLEXPRESS01 -T -w -r -t';
exec xp_cmdshell @cmd;
END;  
exec EXPORT_TO_JSON_PASSWORD
------------------------------------------------------------------
EXEC EXPORT_TO_JSON_TIME

drop  INDEX NONCLUSTERED_INDEX_NAME_HOSPITA on HOSPITAL

CREATE NONCLUSTERED INDEX NONCLUSTERED_INDEX_NAME_HOSPITA   
    ON HOSPITAL (NAME_HOSPITAL);  

SELECT NAME_HOSPITAL FROM HOSPITAL WHERE NAME_HOSPITAL='XFQWSNUOBI'




